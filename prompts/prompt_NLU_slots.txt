Extract slots based on the provided user input and identified intents for a Spotify conversational system. 
Is CRUCIAL that you extract slot values presents in the user input, but not infer any additional information about the user query:
e.g. 
If the user input is like "Give me the duration of Someone Like You" and he doesn't specify any artist, the slot "artist_name" will be null, not "Adele".
At the same manner, if user input is "Show me my top tracks of the last month." limit will be null since is not specified.
Follow these rules strictly:

1. Slot Templates: Use these templates for extraction:
   - song_info: {song_name, artist_name, details} where details is a list of one or more of: ["popularity", "release_date", "duration", "album", "artist", "genres", "all"]
   - artist_info: {artist_name, details} where details is a list of one or more of: ["followers", "popularity", "genres", "all"]
   - album_info: {album_name, artist_name, details} where details is a list of one or more of: ["genres", "release_date", "total_tracks", "all"]
   - user_top_tracks: {time_frame, limit} where time_frame can be "short_term" (1 month or less), "medium_term" (6 months or less), or "long_term" (several years or all time)
   - user_top_artists: {time_frame, limit}
   - get_recommendations: {genre, limit} where genre can be a value between [ "pop", "rock", "jazz", "electronic", "hiphop", "r&b", "soul", "classical", "folk", "reggae"]
   - out_of_domain: {sentence_intent} 

2. Explicit Slot Extraction: Extract only slots explicitly mentioned in the user input. If a slot value is not specified, set it to null. 
   Do not infer or add information not in the input.
   In particular, for user_top_artists and user_top_tracks intents, if the slot limit is not explicitly specified in the input, leave it to null.
   
3. Consistency: Ensure slots match their intents:
   - Example Input: "What are the genres of the album Divide?"
                    - Intent: album_info
     Output: "album_info": {"slots": {"album_name": "Divide", "artist_name": null, "details": ["genres"]}}
   - Example Input: "What is the album and artist for the song Bad Guy?"
                    - Intent: song_info
     Output: "song_info": {"slots": {"song_name": "Bad Guy", "details": ["album", "artist_name"]}}
   - Example Input: "Give me some suggestions about jazz music."
                    - Intent: get_recommendations
     Output: "get_recommendations": {"slots": {"genre": "jazz", "limit": null}}
   
   Notice that if the artist_name is asked, we don't have to put it as single slot, but as detail in the "details" list.

4. Multiple Intents: Handle multiple intents correctly:
   - Example Input: "What are the genres of the album Divide? What is the duration of Shake It Off"
     Intent1: album_info
     Intent2: song_info
     Output:
       - "album_info": {"slots": {"album_name": "Divide", "artist_name": null, "details": ["genres"]}}
       - "song_info": {"slots": {"song_name": "Shake It Off", "artist_name": null, "details": ["duration"]}}

5. Special case: if it's not the first input of the user, you won't get only the user input, but also the name of the entity (e.g. song_name) and 
if available the artist_name (if the entity is a song or an album).
       Example:
            Input:
               When was it released?
               - song_name: "Wrecking Ball" 
               - artist_name: "Miley Cyrus"
               - Intent: song_info
            Output: 
                  "song_info": {"slots": {"song_name": "Wrecking Ball", "artist_name": "Miley Cyrus", "details": ["release_date"]}}

            Input: 
               Can you limit the results to the top 3?
               - time_frame: "medium_term"
               - limit: 10
               - Intent: "user_top_artists" 
            Output:
                  "user_top_artists": {"slots": {"time_frame": "medium_term", "limit": 3}}

6. out_of_domain intent: in this case simply make "sentence_intent": user_input. Is FUNDAMENTAL that you provide the whole user_input as sentence_intent slot.
   Example:
      Input: "How many eggs do I have to put in my chocolate cake?"
      Output: "out_of_domain": {"slots": {"sentence_intent": "How many eggs do I have to put in my chocolate cake?"}}

6. Format and Rules:
   - Use plain text output with no comments or extra information.
   - Example Outputs:
     - "song_info1": {"slots": {"song_name": "Hotel California", "artist_name": null, "details": ["genres"]}}
     - "song_info2": {"slots": {"song_name": "Imagine", "artist_name": null, "details": ["duration"]}}
   - Avoid mistakes such as:
     - Wrong: {"slots": {"song_name": "Hotel California", "artist_name": null, "genres": null}}
     - Correct: {"slots": {"song_name": "Hotel California", "artist_name": null, "details": ["genres"]}}

7. Details Handling: "Details" should be a flat list, not a key-value structure:
   - Wrong: {"slots": {"song_name": "Hotel California", "artist_name": null, "genres": ["Rock", "Soft Rock"]}}
   - Correct: {"slots": {"song_name": "Hotel California", "artist_name": null, "details": ["genres"]}}

8. Particular case: artist_name
   In the case of song_info and album_info, "artist_name" can be either a single slot and an element in "details" list. It will be always a single slot, 
   if the user wants explicitly to know the artist_name it will be added into details list:
   - Input: "Which is the artist of the song Columbia?"
     Output: "song_info": {"slots": {"song_name": "Columbia", "artist_name": null, "details": [ "artist_name" ]}}

Is FUNDAMENTAL that you return the output in this format:
- <intent1>: {"slots": {<slot1>: <slot1_value>, <slot2>: <slot2_value>, ...}}
- <intent2>: {"slots": {<slot1>: <slot1_value>, <slot2>: <slot2_value>, ...}}

Ensure the output adheres to these rules exactly. No extra comments or information. The output must remain consistent with the format mentioned above.
